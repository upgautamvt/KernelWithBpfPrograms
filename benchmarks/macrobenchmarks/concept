terraform to orchestrate VMs, network etc.
make memcached client/server
configure lan
attach xdp to server's nic
send packets from client to server
track server's throughput using memaslap tool


Note: inside the images directory, we need to have all .img files
















The libvirt_volume and libvirt_cloudinit_disk resources in the context of Libvirt (a toolkit to manage virtualization platforms) serve different purposes, primarily related to storage management and cloud-init configuration.
libvirt_volume

    Purpose: Manages storage volumes.
    Use Case: Creating, managing, and manipulating storage volumes that are used by virtual machines (VMs).
    Functionality:
        Create: You can define a volume with specific size, format, and location.
        Attach: Volumes can be attached to VMs as block devices.
        Lifecycle Management: Allows for creation, deletion, and resizing of volumes.
        Storage Pools: Volumes are typically part of storage pools, which are collections of storage devices or files managed by Libvirt.

libvirt_cloudinit_disk

    Purpose: Creates a disk image containing cloud-init metadata.
    Use Case: Configuring VMs on initial boot, typically for automated instance initialization and setup.
    Functionality:
        Cloud-Init: Used to pass user data and metadata to VMs. This can include things like SSH keys, scripts, or configuration details.
        Configuration Data: Allows you to specify user-data, meta-data, and network-config which will be used by cloud-init within the VM.
        Temporary Disk: This is a temporary disk attached to a VM that is used only during the initial boot to perform configuration tasks.

Comparison and Use in Virtual Machine Management

    Primary Function:
        libvirt_volume: Focused on providing storage volumes for general use within VMs.
        libvirt_cloudinit_disk: Focused on the initialization and configuration of VMs using cloud-init.

    Usage Scenarios:
        Use libvirt_volume when you need additional storage for your VMs that persists across reboots and can be managed independently.
        Use libvirt_cloudinit_disk when you need to initialize and configure VMs automatically upon their first boot, typically in cloud or large-scale deployment scenarios.

    Integration:
        Both resources can be used together. A VM might use libvirt_cloudinit_disk for its initial setup and then use libvirt_volume for additional, persistent storage.



Ubuntu cloud images are analogous to hard disk images rather than ISO images.

Ubuntu cloud images are specialized versions of Ubuntu Linux designed specifically for use in cloud computing environments, such as public and private cloud infrastructures. These images are optimized to run efficiently on virtualized platforms and provide a streamlined experience for deploying Ubuntu-based virtual machines (VMs) in cloud environments. Here are some key characteristics and uses of Ubuntu cloud images:
Characteristics of Ubuntu Cloud Images

    Minimal Installation: Ubuntu cloud images are usually minimalistic in nature, containing only essential components required to boot and run Ubuntu Linux. This helps in reducing image size and improving boot times.

    Optimized for Cloud Platforms: These images are optimized to run on popular cloud platforms like Amazon Web Services (AWS), Microsoft Azure, Google Cloud Platform (GCP), and OpenStack. They leverage cloud-specific optimizations and configurations to enhance performance and compatibility.

    Preconfigured Cloud-Init: Ubuntu cloud images often include preconfigured settings for cloud-init, a multi-distribution package that handles early initialization of a cloud instance. Cloud-init allows for automatic configuration of networking, user setup, SSH keys, and other system settings during the VM's first boot.

    Regular Updates: Canonical, the company behind Ubuntu, provides regular updates and security patches for Ubuntu cloud images. This ensures that users can deploy VMs with the latest security fixes and software updates.

    Different Variants: Ubuntu cloud images are available in different variants tailored for specific use cases, such as server editions (focused on command-line management and server applications), desktop editions (with graphical user interfaces for virtual desktop environments), and specialized editions for containerized deployments.

Uses of Ubuntu Cloud Images

    Infrastructure as a Service (IaaS): Ubuntu cloud images are commonly used to create virtual machines (instances) in IaaS environments. Users can launch VMs based on these images to build scalable and flexible cloud infrastructures.

    DevOps and Automation: These images are popular among DevOps teams and system administrators for automating the deployment and management of Ubuntu-based virtual machines. Tools like Terraform, Ansible, and cloud-init are often used to streamline provisioning and configuration tasks.

    Testing and Development: Developers use Ubuntu cloud images to quickly spin up development and testing environments in the cloud. This allows for rapid iteration and testing of applications without the overhead of managing physical hardware.

    High Availability and Scalability: Ubuntu cloud images support features like load balancing, auto-scaling, and fault tolerance offered by cloud providers. They enable organizations to build resilient and scalable applications using cloud-native architectures.

    Container Orchestration: Ubuntu cloud images serve as a base for containerized workloads managed by container orchestration platforms like Kubernetes. These images provide a stable foundation for running containers and microservices in cloud environments.
